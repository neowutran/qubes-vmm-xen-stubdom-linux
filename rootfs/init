#!/bin/sh

set -e
set -x
mount -t devtmpfs none /dev
mount -t sysfs /sys /sys
mount -t proc /proc /proc
mount -t tmpfs -o size=1m,nodev,noexec /tmp /tmp
mount -o remount,ro /

echo 1 > /proc/sys/vm/overcommit_memory

printf "%d\n" "$((2**30))" > /sys/module/xen_gntalloc/parameters/limit

domid=$(/bin/xenstore-read "target")
vm_path=$(xenstore-read "/local/domain/$domid/vm")
# convert multiple keys into \n separated arguments, as shell doesn't handle
# NUL well
dm_args=$(xenstore-read $(xenstore-list -p "$vm_path/image/dm-argv"|sort))

usb_args=
if test -e /bin/qrexec-agent; then 
    usb_args=$'-device\nnec-usb-xhci,id=xhci'
    mkdir -p /var/run/qubes
    USER=root qrexec-agent &
    touch /dev/mdev.log
    mdev -d
fi

# add audiodev conf to cmdline and run pulseaudio 
audio_model=$(echo "$dm_args" | sed -n '/^-audio/ {n;p}')
if [ -n "$audio_model" ] ; then
    model_args=
    if [ "$audio_model" == "ich6" ] ; then
	model_args=$',timer-period=1000,out.buffer-length=4000,in.latency=50000'
    fi
    export XDG_CONFIG_HOME='/tmp'
    pa_args=$'-audiodev\npa,id=qemupa,server=unix:/tmp/pa.sock'$model_args;
    pulseaudio --use-pid-file=no --daemonize=no --exit-idle-time=-1 --disable-shm=yes -n \
	-L "module-native-protocol-unix auth-anonymous=1 socket=/tmp/pa.sock" \
	-L "module-vchan-sink domid=0" &
fi

# Extract network parameters and remove them from dm_args
net_args=$(echo "$dm_args" | sed -n '/^-qubes-net:/p')
dm_args=$(echo "$dm_args" | sed '/^-qubes-net:/d')

get_net_arg() {
    echo "$net_args" | sed -n 's/^.*[:,]'$1'=\([^,]\+\).*$/\1/p'
}

if test -e /sys/class/net/eth0; then
    ip link set eth0 address fe:ff:ff:ff:ff:fe
    ip addr flush eth0
    ip link set eth0 up
    brctl addbr br0
    brctl addif br0 eth0
    ip link set br0 up
    net_dns_0=$(get_net_arg "dns_0")
    net_dns_1=$(get_net_arg "dns_1")
    net_client_ip=$(get_net_arg "client_ip")
    net_netmask=$(get_net_arg "netmask")
    net_gw=$(get_net_arg "gw")
    udhcpd -f -I $net_gw - <<EOC &
start $net_client_ip
end $net_client_ip
max_leases 1

interface br0

lease_file /dev/null

opt dns $net_dns_0 $net_dns_1
opt subnet $net_netmask
opt router $net_gw
EOC
else
    echo "No network interface named eth0."
    ls -l /sys/class/net/
fi

target="$(xenstore-read target)"
device_model="device-model/$target"

mkdir /tmp/qmp

kernel=
if echo "$dm_args" | grep -q '^-append' && [ -b /dev/xvdd ]; then
    mkdir /tmp/boot
    mount /dev/xvdd /tmp/boot -o ro
    if [ -f /tmp/boot/vmlinuz ]; then
        kernel=$'-kernel\n/tmp/boot/vmlinuz'
        if [ -f /tmp/boot/initramfs ]; then
            kernel="$kernel"$'\n-initrd\n/tmp/boot/initramfs'
        fi
    fi
fi

mkfifo /tmp/qmp/qemu.in /tmp/qmp/qemu.out

(
  echo '{"execute": "qmp_capabilities"}' | tee /proc/self/fd/2
) >/tmp/qmp/qemu.in &

(
set +x
cat /tmp/qmp/qemu.out | tee /proc/self/fd/2 | \
while IFS= read -r line; do
    if [ $(echo "\\${line}" | grep -cim1 '"event": "DEVICE_DELETED", "data": {"device": "nic0",') -eq 1 ]; then
        /etc/qemu-ifdown
    fi
done
) &

(
set +x
if [ $(echo "$dm_args" | grep -cim1 "ifname=") -eq 1 ]; then
    VIFNAME=$(echo "$dm_args" | sed -n -e 's/^.*ifname=//p' | sed -n -e 's/,.*$//p')
    while true; do
        if [ $(ip link | grep -cim1 "$VIFNAME") -eq 1 ]; then
            break
        fi
        sleep 0.1
    done
    /etc/qemu-ifup "$VIFNAME"
fi
) &

(
set +x
# Clear kernel log buffer to avoid leaking kaslr layout information
# Messages are still written to xen console
echo "Clearing kmsg buffer..." > /dev/kmsg
while read -r line; do
    if [ $(echo "$line" | grep -cim1 "Clearing kmsg buffer...") -eq 1 ]; then
        break
    fi
done < /proc/kmsg
) &

# replace $STUBDOM_RESTORE_INCOMING_ARG with argument for incoming state - if
# applicable
dm_args=$(echo "$dm_args" | sed 's/\$STUBDOM_RESTORE_INCOMING_ARG/fd:3/')

# setup FD 3 and 4 for migration stream (incoming, outgoing), actual qemu
# options are controlled by the toolstack
if xenstore-read device/console/2 >/dev/null 2>&1; then
    if exec 3</dev/hvc2; then
        stty raw -echo -echoctl <&3
    fi
fi
if xenstore-read device/console/1 >/dev/null 2>&1; then
    if exec 4>/dev/hvc1; then
        stty raw -echo -echoctl <&4
    fi
fi
# $dm_args and $kernel are separated with \n to allow for spaces in arguments.
IFS=$'\n'
set -f
qemu -sandbox on,obsolete=deny,elevateprivileges=deny,spawn=deny,resourcecontrol=deny \
-chardev pipe,path=/tmp/qmp/qemu,id=m -mon chardev=m,mode=control \
-chardev socket,server,nowait,path=/tmp/qemu.qmp,id=m2 -mon chardev=m2,mode=control \
    $dm_args $pa_args $usb_args $kernel &
set +f
unset IFS

qemu_pid=$!


while [ ! -e /tmp/qemu.qmp ]; do sleep 0.1; done
if [ -e /proc/self/fd/4 ]; then
    qmp_hello=$'{"execute":"qmp_capabilities","id":1}\r\n'
    qmp_addfd=$'{"execute":"add-fd", "arguments": { "fdset-id": 1 }, "id":42 }\r\n'
    add-fd /tmp/qemu.qmp /dev/fd/4 "$qmp_hello$qmp_addfd" "42"
    exec 4>&-
fi

if [ -e /proc/self/fd/3 ]; then
    exec 3<&-
fi

# FIXME: this assume dom0 as toolstack domain
vchan-socket-proxy --mode=server --reconnect-marker=1 --verbose 0 $device_model/qmp-vchan /tmp/qemu.qmp &

while true; do
    printf '==== Press enter for shell ====\n'
    read
    setsid /bin/cttyhack /bin/sh
done
